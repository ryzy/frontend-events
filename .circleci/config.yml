version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8-browsers

    steps:
      - checkout
      - run: yarn versions && npm version

      # Note: frozen-lockfile to make sure yarn.lock is in sync (otherwise fail, developer must commit latest yarn.lock)
      - run: yarn install --frozen-lockfile

      - run: yarn test:ci --progress=false
      - run: yarn build:prod --progress=false
      - run: yarn lint
      - run: yarn coverage
      - run: yarn e2e:ci --config baseUrl=http://localhost:4104,watchForFileChanges=false,numTestsKeptInMemory=5

      - deploy:
          name: Deploy DEV
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ] || [[ "${CIRCLE_BRANCH}" =~ ^deploy ]]; then
              yarn deploy

              # Send deploy message to #frontend-events-dev Slack channel
              curl -X POST --data-urlencode "payload={\"channel\": \"#frontend-events-dev\", \"username\": \"Firebase CI\", \"text\": \"*https://frontend-events-dev.firebaseapp.com deployed with success* :green_heart:\", \"icon_emoji\": \":princess:\"}" https://hooks.slack.com/services/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
            fi
      - deploy:
          name: Deploy PROD
          command: |
            if [ "${CIRCLE_BRANCH}" == "prod" ]; then
              yarn deploy:prod

              # Send deploy message to #frontend-events-dev Slack channel
              curl -X POST --data-urlencode "payload={\"channel\": \"#frontend-events-dev\", \"username\": \"Firebase CI\", \"text\": \"*https://frontend-events.firebaseapp.com deployed LIVE with success* :green_heart:\", \"icon_emoji\": \":princess:\"}" https://hooks.slack.com/services/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
            fi
